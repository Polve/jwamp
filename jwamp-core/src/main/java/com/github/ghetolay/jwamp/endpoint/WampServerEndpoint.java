package com.github.ghetolay.jwamp.endpoint;

import java.io.IOException;

import javax.websocket.EncodeException;
import javax.websocket.EndpointConfig;
import javax.websocket.MessageHandler;
import javax.websocket.Session;

import com.github.ghetolay.jwamp.message.WampMessage;
import com.github.ghetolay.jwamp.message.WampWelcomeMessage;

//What to do for wamp session id :
//- use session.getId() generated by websocket container 
//- create our own generator ?
//- configurable ?
public class WampServerEndpoint extends ExtendedWampEndpoint implements MessageHandler.Whole<WampMessage>{
	
	private String sessionId;
	
	public WampServerEndpoint() {}
	
	public WampServerEndpoint(WampDispatcher dispatcher) {
		super(dispatcher);
	}

	@Override
	public void onOpen(Session session, EndpointConfig config) {
		
		dispatcher = (WampDispatcher)config.getUserProperties().get("jwamp.dispatcher");
		
		try {
			sessionId = session.getId();
			session.getBasicRemote().sendObject(WampWelcomeMessage.newJWamp(sessionId));
			
			dispatcher.newConnection( new SameWampSession(session) );
			session.addMessageHandler(this);
		} catch (IOException | EncodeException e) {
			log.error("Error while sending welcome message", e);
		}
	}
	
	@Override
	public void onMessage(WampMessage message) {
		dispatcher.onMessage(message, sessionId);
	}
}
